---
import CTASimple from './CTASimple.astro';
import CTAWithContact from './CTAWithContact.astro';
import CTAWithForm from './CTAWithForm.astro';

export interface Props {
  title: string;
  description: string;
  primaryCta: {
    text: string;
    url: string;
  };
  secondaryCta?: {
    text: string;
    url: string;
  } | null;
  variant?: 'simple' | 'with-contact' | 'with-form';
  bgGradient?: string;
  contactMethods?: {
    email?: string;
    phone?: string;
    whatsapp?: string;
  };
  showGuarantee?: boolean;
  // New props for dynamic payment links
  productId?: string;
  planId?: string;
  isPaymentButton?: boolean;
}

const {
  title,
  description,
  primaryCta,
  secondaryCta,
  variant = 'simple',
  bgGradient,
  contactMethods,
  showGuarantee,
  productId,
  planId,
  isPaymentButton,
} = Astro.props;
---

{
  variant === 'simple' && (
    <CTASimple
      title={title}
      description={description}
      primaryCta={primaryCta}
      {...(secondaryCta && { secondaryCta })}
      {...(productId && { productId })}
      {...(planId && { planId })}
      {...(isPaymentButton !== undefined && { isPaymentButton })}
    />
  )
}

{
  variant === 'with-contact' && (
    <CTAWithContact
      title={title}
      description={description}
      primaryCta={primaryCta}
      {...(secondaryCta && { secondaryCta })}
      {...(bgGradient && { bgGradient })}
      {...(contactMethods && { contactMethods })}
    />
  )
}

{
  variant === 'with-form' && (
    <CTAWithForm
      title={title}
      description={description}
      primaryCta={primaryCta}
      {...(secondaryCta && { secondaryCta })}
      {...(showGuarantee !== undefined && { showGuarantee })}
    />
  )
}
