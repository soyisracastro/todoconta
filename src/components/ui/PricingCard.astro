---
export interface Props {
  title: string;
  price: string;
  pricePeriod?: string | undefined;
  badge?: string | undefined;
  description: string;
  features: string[];
  featured?: boolean | undefined;
  ctaText?: string | undefined;
  ctaHref?: string | undefined;
  showBankTransferCta?: boolean | undefined;
  // New props for dynamic payment
  productId?: string | undefined;
  planId?: string | undefined;
  isPaymentButton?: boolean | undefined;
}

const {
  title,
  price,
  pricePeriod = 'mes',
  badge,
  description,
  features,
  featured = false,
  ctaText = 'Contratar',
  ctaHref = '#contacto',
  showBankTransferCta = false,
  productId,
  planId,
  isPaymentButton = false,
} = Astro.props;

import Button from './Button.astro';
---

<div class={`pricing-card ${featured ? 'featured' : ''} fade-in-up`}>
  {badge && <div class="pricing-badge">{badge}</div>}
  <h3 class="pricing-title">{title}</h3>
  <div class="pricing-price">${price}</div>
  <div class="pricing-period">/{pricePeriod && pricePeriod}</div>
  <p class="pricing-description">{description}</p>

  <ul class="pricing-features">
    {features.map(feature => <li>{feature}</li>)}
  </ul>

  <div class="pricing-ctas">
    {isPaymentButton ? (
      <button
        class={`btn ${featured ? 'btn-secondary' : 'btn-outline'} pricing-payment-btn`}
        data-product-id={productId}
        data-plan-id={planId}
        data-payment-button="true"
        type="button"
      >
        {ctaText}
      </button>
    ) : (
      <Button href={ctaHref} variant={featured ? 'secondary' : 'outline'}>
        {ctaText}
      </Button>
    )}

    {showBankTransferCta && (
      <Button href="#bank-transfer-section" variant="outline" class="bank-transfer-cta">
        ðŸ’³ Pago con Transferencia
      </Button>
    )}
  </div>
</div>

<style>
  .pricing-card {
    background: var(--color-background);
    border-radius: var(--border-radius-2xl);
    padding: var(--space-8);
    border: 2px solid var(--color-primary-light);
    transition: all var(--transition-slow);
    position: relative;
    display: flex;
    flex-direction: column;
  }

  .pricing-card.featured {
    border-color: var(--color-primary);
    background: var(--color-primary-light);
    transform: scale(1.05);
    z-index: 1;
    box-shadow: var(--shadow-lg);
  }

  .pricing-card:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-xl);
    border-color: var(--color-primary);
  }

  .pricing-card.featured:hover {
    transform: scale(1.05) translateY(-8px);
  }

  .pricing-badge {
    display: inline-block;
    background: var(--color-primary-light);
    color: var(--color-primary);
    padding: var(--space-2) var(--space-4);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-sm);
    font-weight: 600;
    margin-bottom: var(--space-4);
  }

  .pricing-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-2xl);
    font-weight: 700;
    color: var(--color-text-primary);
    margin-bottom: var(--space-3);
  }

  .pricing-price {
    font-family: var(--font-secondary);
    font-size: var(--font-size-4xl);
    font-weight: 800;
    color: var(--color-primary);
    margin-bottom: var(--space-2);
  }

  .pricing-period {
    color: var(--color-primary);
    font-size: var(--font-size-base);
    margin-bottom: var(--space-6);
  }

  .pricing-description {
    color: var(--color-text-secondary);
    margin-bottom: var(--space-6);
    line-height: 1.6;
  }

  .pricing-features {
    list-style: none;
    margin-bottom: var(--space-8);
    flex-grow: 1;
  }

  .pricing-features li {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    margin-bottom: var(--space-3);
    color: var(--color-text-primary);
    font-size: var(--font-size-sm);
    position: relative;
    padding-left: var(--space-6);
  }

  .pricing-features li::before {
    content: 'âœ“';
    color: var(--color-primary);
    font-weight: bold;
    position: absolute;
    left: 0;
    font-size: var(--font-size-base);
  }

  .pricing-ctas {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }

  .pricing-payment-btn {
    width: 100%;
    font-size: var(--font-size-sm);
    padding: var(--space-3) var(--space-4);
    border-radius: var(--border-radius-md);
    font-weight: 500;
    cursor: pointer;
    transition: all var(--transition-fast);
    border: 2px solid var(--color-primary);
    background: transparent;
    color: var(--color-primary);
  }

  .pricing-payment-btn:hover {
    background: var(--color-primary);
    color: var(--color-white);
  }

  .pricing-payment-btn.btn-secondary {
    background: var(--color-primary);
    color: var(--color-white);
  }

  .pricing-payment-btn.btn-secondary:hover {
    background: var(--color-primary-dark);
  }

  .bank-transfer-cta {
    font-size: var(--font-size-sm);
    padding: var(--space-2) var(--space-4);
    border-color: var(--color-success);
    color: var(--color-success);
  }

  .bank-transfer-cta:hover {
    background-color: var(--color-success);
    color: var(--color-white);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .pricing-card.featured {
      transform: none;
    }

    .pricing-card.featured:hover {
      transform: translateY(-8px);
    }

    .pricing-ctas {
      gap: var(--space-2);
    }

    .bank-transfer-cta {
      font-size: var(--font-size-xs);
      padding: var(--space-2) var(--space-3);
    }
  }
</style>

<script>
  // Payment button functionality is handled by initPaymentButtons() in shared-utils.js
</script>
