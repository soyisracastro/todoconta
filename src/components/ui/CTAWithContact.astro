---
import Button from './Button.astro';

export interface Props {
  title: string;
  description: string;
  primaryCta: {
    text: string;
    url: string;
  };
  secondaryCta?: {
    text: string;
    url: string;
  } | null;
  bgGradient?: string;
  contactMethods?: {
    email?: string;
    phone?: string;
    whatsapp?: string;
  };
}

const {
  title,
  description,
  primaryCta,
  secondaryCta,
  bgGradient = 'linear-gradient(135deg, var(--color-primary) 0%, var(--primary-800) 100%)',
  contactMethods,
} = Astro.props;
---

<section class="cta-with-contact" style={`--cta-bg-gradient: ${bgGradient};`}>
  <div class="container">
    <div class="cta-content animate-fade-in-up">
      <h2 class="cta-title">{title}</h2>
      <p class="cta-description">{description}</p>

      <div class="cta-buttons">
        <Button href={primaryCta.url} variant="primary">
          {primaryCta.text}
        </Button>

        {
          secondaryCta && (
            <Button href={secondaryCta.url} variant="secondary">
              {secondaryCta.text}
            </Button>
          )
        }
      </div>

      {
        contactMethods && (
          <div class="cta-contact">
            <p>¬øTienes preguntas espec√≠ficas? Cont√°ctanos directamente:</p>
            <div class="contact-methods">
              {contactMethods.email && (
                <a
                  href={`mailto:${contactMethods.email}`}
                  class="contact-method"
                >
                  <span class="contact-icon">‚úâÔ∏è</span>
                  <span class="contact-text">{contactMethods.email}</span>
                </a>
              )}
              {contactMethods.phone && (
                <a
                  href={`tel:${contactMethods.phone.replace(/\D/g, '')}`}
                  class="contact-method"
                >
                  <span class="contact-icon">üìû</span>
                  <span class="contact-text">{contactMethods.phone}</span>
                </a>
              )}
              {contactMethods.whatsapp && (
                <a
                  href={`https://wa.me/${contactMethods.whatsapp}`}
                  target="_blank"
                  class="contact-method"
                >
                  <span class="contact-icon">üí¨</span>
                  <span class="contact-text">WhatsApp</span>
                </a>
              )}
            </div>
          </div>
        )
      }
    </div>
  </div>
</section>

<style>
  .cta-with-contact {
    padding: var(--space-16) 0;
    background: var(--cta-bg-gradient);
    color: var(--color-white);
    position: relative;
    overflow: hidden;
  }

  .cta-with-contact::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100' fill='none'%3E%3Ccircle cx='25' cy='25' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3Ccircle cx='75' cy='75' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3Ccircle cx='75' cy='25' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3Ccircle cx='25' cy='75' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3C/svg%3E");
    opacity: 0.2;
    z-index: 1;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-6);
    position: relative;
    z-index: 1;
  }

  .cta-content {
    position: relative;
    z-index: 2;
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .cta-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-3xl);
    font-weight: 700;
    margin-bottom: var(--space-4);
    color: var(--color-white);
  }

  .cta-description {
    margin-bottom: var(--space-8);
    font-size: var(--font-size-lg);
    line-height: 1.6;
    opacity: 0.9;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-buttons {
    display: flex;
    gap: var(--space-4);
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: var(--space-8);
  }

  .cta-contact {
    margin-top: var(--space-8);
    padding-top: var(--space-8);
    border-top: 1px solid rgba(255, 255, 255, 0.2);
  }

  .cta-contact p {
    margin-bottom: var(--space-4);
    opacity: 0.9;
  }

  .contact-methods {
    display: flex;
    gap: var(--space-6);
    justify-content: center;
    flex-wrap: wrap;
  }

  .contact-method {
    display: flex;
    align-items: center;
    color: var(--color-white);
    text-decoration: none;
    gap: var(--space-2);
    transition: transform var(--transition-normal);
  }

  .contact-method:hover {
    transform: translateY(-2px);
  }

  .contact-icon {
    font-size: var(--font-size-xl);
  }

  .contact-text {
    border-bottom: 1px dashed rgba(255, 255, 255, 0.5);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .cta-title {
      font-size: var(--font-size-2xl);
    }

    .cta-description {
      font-size: var(--font-size-base);
    }

    .cta-buttons {
      flex-direction: column;
      width: 100%;
      align-items: center;
    }

    .contact-methods {
      flex-direction: column;
      gap: var(--space-4);
    }
  }
</style>
