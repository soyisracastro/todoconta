---
export const prerender = true;
// src/pages/servicios/[slug].astro
import { getCollection } from 'astro:content';
import ServiceLayout from '../../layouts/ServiceLayout.astro';
import Navbar from '../../components/layout/Navbar.astro';
import Footer from '../../components/layout/Footer.astro';
import FAQ from '../../components/ui/FAQ.astro';
import CTA from '../../components/ui/CTA.astro';
import Button from '../../components/ui/Button.astro';

// Genera rutas para cada servicio
export async function getStaticPaths() {
  const services = await getCollection('services');
  return services.map(service => ({
    params: { slug: service.slug },
    props: { service },
  }));
}

const { service } = Astro.props;
const {
  title,
  description,
  icon,
  price,
  priceNote,
  deliveryTime,
  badge,
  heroImage,
  ctaText,
  ctaUrl,
  secondaryCtaText,
  secondaryCtaUrl,
  benefits = [],
  process = [],
  requirements = [],
  deliverables = [],
  relatedServices = [],
  faqs = [],
  testimonials = [],
} = service.data;

// Formatear el precio
const formatPrice = (price: number | undefined): string => {
  return new Intl.NumberFormat('es-MX', {
    style: 'currency',
    currency: 'MXN',
    maximumFractionDigits: 0,
  }).format(price || 0);
};

const formattedPrice = formatPrice(price);

// Generar URL de placeholder para imÃ¡genes
const getPlaceholderImage = (
  width: number,
  height: number,
  text: string
): string => {
  return `https://placehold.co/${width}x${height}/075985/FFFFFF/png?text=${encodeURIComponent(text || 'Todoconta')}`;
};

const heroPlaceholder = getPlaceholderImage(800, 450, title);
const testimonialPlaceholder = getPlaceholderImage(80, 80, 'TC');

// Obtener servicios relacionados si existen
let relatedServicesData: any[] = [];
if (relatedServices && relatedServices.length > 0) {
  const allServices = await getCollection('services');
  relatedServicesData = relatedServices
    .map(slug => allServices.find(s => s.slug === slug))
    .filter(Boolean);
}
---

<ServiceLayout title={title} description={description}>
  <Navbar />
  <!-- Hero Section -->
  <section class="hero">
    <div class="container">
      <div class="hero-content">
        <div class="hero-text">
          {badge && <div class="hero-badge">{badge}</div>}
          <h1 class="hero-title">
            {icon && <span class="hero-icon">{icon} </span>}
            {title}
          </h1>
          <p class="hero-description">{description}</p>

          {
            (price || deliveryTime) && (
              <div class="hero-details">
                {price && (
                  <div class="hero-detail">
                    <span class="detail-label">Precio:</span>
                    <span class="detail-value">
                      {formattedPrice} {priceNote && <small>{priceNote}</small>}
                    </span>
                  </div>
                )}

                {deliveryTime && (
                  <div class="hero-detail">
                    <span class="detail-label">Tiempo de entrega:</span>
                    <span class="detail-value">{deliveryTime}</span>
                  </div>
                )}
              </div>
            )
          }

          <div class="hero-actions">
            <Button href={ctaUrl || '#contacto'} variant="primary">
              {ctaText || 'Solicitar Servicio'}
            </Button>

            {
              secondaryCtaText && secondaryCtaUrl && (
                <Button href={secondaryCtaUrl} variant="outline">
                  {secondaryCtaText}
                </Button>
              )
            }
          </div>
        </div>

        <div class="hero-image">
          <img src={heroImage || heroPlaceholder} alt={title} />
        </div>
      </div>
    </div>
  </section>

  <!-- Benefits Section -->
  {
    benefits && benefits.length > 0 && (
      <section class="benefits section">
        <div class="container">
          <h2 class="section-title">Beneficios de Nuestro Servicio</h2>
          <p class="section-subtitle">
            Conoce las ventajas de nuestro servicio especializado
          </p>

          <div class="benefits-grid">
            {benefits.map(benefit => (
              <div class="benefit-card">
                {benefit.icon && <div class="benefit-icon">{benefit.icon}</div>}
                <h3 class="benefit-title">{benefit.title}</h3>
                <p class="benefit-description">{benefit.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- Process Section -->
  {
    process && process.length > 0 && (
      <section class="process section" id="proceso">
        <div class="container">
          <h2 class="section-title">Nuestro Proceso</h2>
          <p class="section-subtitle">Conoce cÃ³mo trabajamos paso a paso</p>

          <div class="process-steps">
            {process.map((step, index) => (
              <div class="process-step">
                <div class="step-number">{index + 1}</div>
                <div class="step-content">
                  {step.icon && <div class="step-icon">{step.icon}</div>}
                  <h3 class="step-title">{step.title}</h3>
                  <p class="step-description">{step.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- Requirements & Deliverables Section -->
  {
    (requirements.length > 0 || deliverables.length > 0) && (
      <section class="requirements-deliverables section" id="requisitos">
        <div class="container">
          <div class="requirements-deliverables-grid">
            {requirements.length > 0 && (
              <div class="requirements-card">
                <h2 class="card-title">Requisitos</h2>
                <p class="card-subtitle">
                  Lo que necesitamos para iniciar el trÃ¡mite
                </p>

                <ul class="requirements-list">
                  {requirements.map(requirement => (
                    <li class="requirement-item">
                      <span class="requirement-icon">ðŸ“‹</span>
                      <span class="requirement-text">{requirement}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            {deliverables.length > 0 && (
              <div class="deliverables-card">
                <h2 class="card-title">Entregables</h2>
                <p class="card-subtitle">
                  Lo que recibirÃ¡s al finalizar el servicio
                </p>

                <ul class="deliverables-list">
                  {deliverables.map(deliverable => (
                    <li class="deliverable-item">
                      <span class="deliverable-icon">âœ…</span>
                      <span class="deliverable-text">{deliverable}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </div>
      </section>
    )
  }

  <!-- Testimonials Section -->
  {
    testimonials && testimonials.length > 0 && (
      <section class="testimonials section">
        <div class="container">
          <h2 class="section-title">Lo Que Dicen Nuestros Clientes</h2>
          <p class="section-subtitle">
            Experiencias de quienes ya han contratado este servicio
          </p>

          <div class="testimonials-grid">
            {testimonials.map(testimonial => (
              <div class="testimonial-card">
                <div class="quote-icon">"</div>
                <p class="testimonial-quote">{testimonial.quote}</p>

                <div class="testimonial-author">
                  <div class="author-avatar">
                    <img
                      src={testimonial.avatar || testimonialPlaceholder}
                      alt={testimonial.author}
                    />
                  </div>

                  <div class="author-info">
                    <h4 class="author-name">{testimonial.author}</h4>
                    <p class="author-position">
                      {testimonial.position}
                      {testimonial.position && testimonial.company && ', '}
                      {testimonial.company}
                    </p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- FAQ Section -->
  {
    faqs && faqs.length > 0 && (
      <FAQ
        title="Preguntas Frecuentes"
        subtitle="Resolvemos tus dudas sobre este servicio"
        faqs={faqs}
        variant="card"
      />
    )
  }

  <!-- Related Services Section -->
  {
    relatedServicesData.length > 0 && (
      <section class="related-services section">
        <div class="container">
          <h2 class="section-title">Servicios Relacionados</h2>
          <p class="section-subtitle">
            Estos servicios pueden complementar tu trÃ¡mite
          </p>

          <div class="related-services-grid">
            {relatedServicesData.map(relatedService => (
              <a
                href={`/servicios/${relatedService.slug}`}
                class="related-service-card"
              >
                <div class="related-service-icon">
                  {relatedService.data.icon}
                </div>
                <h3 class="related-service-title">
                  {relatedService.data.title}
                </h3>
                <p class="related-service-description">
                  {relatedService.data.shortDescription ||
                    relatedService.data.description.substring(0, 120) + '...'}
                </p>
                <span class="related-service-link">Ver servicio â†’</span>
              </a>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- CTA Section -->
  <CTA
    title={`Â¿Listo para contratar nuestro servicio de ${title}?`}
    description="ContÃ¡ctanos hoy mismo y comienza el proceso. Estamos aquÃ­ para ayudarte."
    primaryCta={{
      text: ctaText || 'Solicitar Servicio',
      url: ctaUrl || '#contacto',
    }}
    secondaryCta={secondaryCtaText && secondaryCtaUrl
      ? {
          text: secondaryCtaText,
          url: secondaryCtaUrl,
        }
      : null}
    variant="with-contact"
    contactMethods={{
      email: 'hola@todoconta.com',
      phone: '(55) 4475-3602',
      whatsapp: '5215544753602',
    }}
  />

  <Footer />
</ServiceLayout>
